library(Mypackage)
library(Mypackage)
library(Mypackage)
library(devtools)
build_vignettes("Mypackage")
getwd()
build_vignettes()
?build_vignettes
use_vignette("Mypackage")
use_testthat()
library(Mypackage)
library(Mypackage)
library(Mypackage)
library(Mypackage)
library(Mypackage)
library(Mypackage)
library(Mypackage)
install.packages("testthat")
library(testthat)
make_filename(2013)
make_filename("to")
test_that("the function make_filename returns warring if argument is not numeric",{
x <- "string"
expect_warning(make_filename(x))
})
test_that("the function make_filename retuns correct filename if year is inserted",{
x <- 2013
y <- "accident_2013.csv.bz2"
expect_equal(make_filename(x), y)
})
library(Mypackage)
library(Mypackage)
test_that("equal",{
x <- 10
y <- 10
expect_equal(x,y)
})
library(devtools)
use_travis()
test_that("the function make_filename returns warring if argument is not numeric",{
x <- "string"
expect_warning(make_filename(x))
})
library(testthat)
context("make_filename")
test_that("the function make_filename returns warring if argument is not numeric",{
x <- "string"
expect_warning(make_filename(x))
})
library(testthat)
library(Mypackage)
context("make_filename")
test_that("the function make_filename returns warring if argument is not numeric",{
x <- "string"
expect_warning(make_filename(x))
})
test_that("the function make_filename retuns correct filename if year is inserted",{
x <- 2013
y <- "accident_2013.csv.bz2"
expect_equal(make_filename(x), y)
})
test_that("the function make_filename retuns correct filename if year is inserted",{
x <- 2014
y <- "accident_2013.csv.bz2"
expect_equal(make_filename(x), y)
})
make_filename("string")
test_that("the function make_filename returns warring if argument is not numeric",{
x <- 2014
expect_warning(make_filename(x))
})
